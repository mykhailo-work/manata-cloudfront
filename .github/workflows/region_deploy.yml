name: Deploy to Region

on:
  workflow_call:
    inputs:
      region:
        required: true
        type: string

env:
  DEPLOY_APP: almus-app
  DEPLOY_GROUP: dev-dg
  PROD_DEPLOY_GROUP: prod-dg

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set env args for Amazon ECR
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=dev" >> $GITHUB_ENV

      - name: Change env for production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "ECR_REPOSITORY=prod" >> $GITHUB_ENV
          echo "DEPLOY_GROUP=${{ env.PROD_DEPLOY_GROUP }}" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker compose -f docker-compose.cd.yml build
          docker compose -f docker-compose.cd.yml push

      - name: Create CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.DEPLOY_APP }} \
            --deployment-group-name ${{ env.DEPLOY_GROUP }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
